{"ast":null,"code":"var _jsxFileName = \"/Users/kevn/repos/stocks_app/StockMarketApp/stockssim-frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    user: 'bot',\n    text: 'Hello! How can I assist you with your stock trading?'\n  }]);\n  const [input, setInput] = useState('');\n  const sendMessage = () => {\n    setMessages([...messages, {\n      user: 'me',\n      text: input\n    }]);\n    // Here you'd send 'input' to the LLM API, and get a response\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatWindow,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: message.user === 'me' ? styles.myMessage : styles.botMessage,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: styles.input,\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Ask me something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"XmA/GW6mvePngOQMIeYXYpvg4cI=\");\n_c = Chatbot;\nconst styles = {\n  container: {\n    padding: '20px'\n  },\n  chatWindow: {\n    border: '1px solid #ddd',\n    height: '400px',\n    padding: '10px',\n    overflowY: 'scroll'\n  },\n  myMessage: {\n    textAlign: 'right',\n    padding: '10px',\n    backgroundColor: '#f0f0f0',\n    marginBottom: '5px'\n  },\n  botMessage: {\n    textAlign: 'left',\n    padding: '10px',\n    backgroundColor: '#d0d0f0',\n    marginBottom: '5px'\n  },\n  input: {\n    padding: '10px',\n    width: '80%',\n    marginRight: '10px'\n  },\n  button: {\n    padding: '10px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","user","text","input","setInput","sendMessage","style","styles","container","children","chatWindow","map","message","index","myMessage","botMessage","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","button","onClick","_c","padding","border","height","overflowY","textAlign","backgroundColor","marginBottom","width","marginRight","color","cursor","$RefreshReg$"],"sources":["/Users/kevn/repos/stocks_app/StockMarketApp/stockssim-frontend/src/components/Chatbot.js"],"sourcesContent":["// src/components/Chatbot.js\nimport React, { useState } from 'react';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { user: 'bot', text: 'Hello! How can I assist you with your stock trading?' },\n  ]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = () => {\n    setMessages([...messages, { user: 'me', text: input }]);\n    // Here you'd send 'input' to the LLM API, and get a response\n    setInput('');\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.chatWindow}>\n        {messages.map((message, index) => (\n          <div key={index} style={message.user === 'me' ? styles.myMessage : styles.botMessage}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        style={styles.input}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Ask me something...\"\n      />\n      <button style={styles.button} onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: { padding: '20px' },\n  chatWindow: { border: '1px solid #ddd', height: '400px', padding: '10px', overflowY: 'scroll' },\n  myMessage: { textAlign: 'right', padding: '10px', backgroundColor: '#f0f0f0', marginBottom: '5px' },\n  botMessage: { textAlign: 'left', padding: '10px', backgroundColor: '#d0d0f0', marginBottom: '5px' },\n  input: { padding: '10px', width: '80%', marginRight: '10px' },\n  button: { padding: '10px', backgroundColor: '#4CAF50', color: 'white', border: 'none', cursor: 'pointer' },\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}